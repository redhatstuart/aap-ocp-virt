---
- name: Deploy VMs
  hosts: localhost
  tasks:

    - name: Create the 'linuxvm' namespace
      kubernetes.core.k8s:
        validate_certs: false
        name: linuxvm
        kind: Namespace
        api_version: v1
        state: present
    - name: Create VM
      kubernetes.core.k8s:
        definition:
          apiVersion: kubevirt.io/v1
          kind: VirtualMachine
          metadata:
            name: "{{ item.role }}-{{ item.env }}-{{ '%02d' | format(item.id) }}"
            namespace: linuxvm
            labels:
              app: "{{ item.role }}-{{ item.env }}-{{ '%02d' | format(item.id) }}"
              kubevirt.io/dynamic-credentials-support: 'true'
              vm.kubevirt.io/template: rhel9-server-small
              vm.kubevirt.io/template.namespace: openshift
              vm.kubevirt.io/template.revision: '1'
              vm.kubevirt.io/template.version: v0.26.0
          spec:
            running: true
            dataVolumeTemplates:
              - apiVersion: cdi.kubevirt.io/v1beta1
                kind: DataVolume
                metadata:
                  name: "{{ item.role }}-{{ item.env }}-{{ '%02d' | format(item.id) }}"
                spec:
                  sourceRef:
                    kind: DataSource
                    name: rhel9
                    namespace: openshift-virtualization-os-images
                  storage:
                    resources:
                      requests:
                        storage: 30Gi
            template:
              metadata:
                labels:
                  kubevirt.io/domain: "{{ item.role }}-{{ item.env }}-{{ '%02d' | format(item.id) }}"
                  kubevirt.io/size: small
              spec:
                architecture: amd64
                domain:
                  cpu:
                    cores: 1
                    sockets: 1
                    threads: 1
                  devices:
                    disks:
                      - disk:
                          bus: virtio
                        name: rootdisk
                      - disk:
                          bus: virtio
                        name: cloudinitdisk
                    interfaces:
                      - macAddress: "02:f3:be:00:00:{{ '%02x' | format(item.id) }}"
                        masquerade: {}
                        model: virtio
                        name: default
                    networkInterfaceMultiqueue: true
                    rng: {}
                  features:
                    acpi: {}
                    smm:
                      enabled: true
                  firmware:
                    bootloader:
                      efi: {}
                  machine:
                    type: pc-q35-rhel9.2.0
                  memory:
                    guest: 2Gi
                networks:
                  - name: default
                    pod: {}
                terminationGracePeriodSeconds: 180
                volumes:
                  - dataVolume:
                      name: "{{ item.role }}-{{ item.env }}-{{ '%02d' | format(item.id) }}"
                    name: rootdisk
                  - cloudInitConfigDrive:
                      userData: |
                        #cloud-config
                        users:
                          - name: cloud-user
                            sudo: ['ALL=(ALL) NOPASSWD: ALL']
                            groups: wheel
                            shell: /bin/bash
                            ssh_authorized_keys:
                              - "{{ ssh_public_key }}"
                            passwd: "{{ vm_password }}"
                            lock_passwd: false
                        chpasswd:
                          list: |
                            cloud-user:{{ vm_password }}
                          expire: False
                    name: cloudinitdisk
      loop:
        - { role: "web01", env: "prod", id: 1 }
        - { role: "app01", env: "prod", id: 2 }
        - { role: "db01", env: "prod", id: 3 }
        - { role: "web01", env: "dev", id: 4 }
        - { role: "app01", env: "dev", id: 5 }
        - { role: "db01", env: "dev", id: 6 }
        - { role: "web01", env: "staging", id: 7 }
        - { role: "app01", env: "staging", id: 8 }
        - { role: "db01", env: "staging", id: 9 }
        - { role: "web01", env: "testing", id: 10 }
        - { role: "app01", env: "testing", id: 11 }
        - { role: "db01", env: "testing", id: 12 }
        - { role: "web02", env: "prod", id: 13 }
        - { role: "app02", env: "prod", id: 14 }
        - { role: "db02", env: "prod", id: 15 }
        - { role: "web02", env: "dev", id: 16 }
        - { role: "app02", env: "dev", id: 17 }
        - { role: "db02", env: "dev", id: 18 }
        - { role: "web02", env: "staging", id: 19 }
        - { role: "app02", env: "staging", id: 20 }
        - { role: "db02", env: "staging", id: 21 }
        - { role: "web02", env: "testing", id: 22 }
        - { role: "app02", env: "testing", id: 23 }
        - { role: "db02", env: "testing", id: 24 }       
        - { role: "web03", env: "prod", id: 25 }
        - { role: "app03", env: "prod", id: 26 }
        - { role: "db03", env: "prod", id: 27 }
        - { role: "web03", env: "dev", id: 28 }
        - { role: "app03", env: "dev", id: 29 }
        - { role: "db03", env: "dev", id: 30 }
        - { role: "web03", env: "staging", id: 31 }
        - { role: "app03", env: "staging", id: 32 }
        - { role: "db03", env: "staging", id: 33 }
        - { role: "web03", env: "testing", id: 34 }
        - { role: "app03", env: "testing", id: 35 }
        - { role: "db03", env: "testing", id: 36 }
        - { role: "web03", env: "prod", id: 37 }
        - { role: "app04", env: "prod", id: 38 }
        - { role: "db04", env: "prod", id: 39 }
        - { role: "web04", env: "dev", id: 40 }
        - { role: "app04", env: "dev", id: 41 }
        - { role: "db04", env: "dev", id: 42 }
        - { role: "web04", env: "staging", id: 43 }
        - { role: "app04", env: "staging", id: 44 }
        - { role: "db04", env: "staging", id: 45 }
        - { role: "web04", env: "testing", id: 46 }
        - { role: "app04", env: "testing", id: 47 }
        - { role: "db04", env: "testing", id: 48 }        
